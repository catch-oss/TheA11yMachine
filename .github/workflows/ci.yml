name: CI

on:
  push:
    branches: [ main, master, develop ]
  pull_request:
    branches: [ main, master, develop ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18.x, 20.x, 22.x]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Run linter (if available)
      run: npm run lint --if-present
      
    - name: Run unit tests
      run: npm test
      
    - name: Run integration tests
      run: npm run test:integration --if-present

  security-audit:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Use Node.js 20
      uses: actions/setup-node@v4
      with:
        node-version: 20.x
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Run security audit
      run: npm audit --audit-level=high
      
    - name: Check for vulnerabilities
      run: npm audit --audit-level=moderate

  accessibility-test:
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Use Node.js 20
      uses: actions/setup-node@v4
      with:
        node-version: 20.x
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Test CLI with sample HTML
      run: |
        echo '<html><head><title>Test Page</title></head><body><h1>Test</h1><img src="test.jpg" alt="Test image"><p>This is a test page for accessibility testing.</p></body></html>' > test.html
        timeout 60s node ./a11ym file://$(pwd)/test.html -d 0 -o ./test-output -r json || echo "CLI test completed (may have timed out)"
        
    - name: Check output was generated
      run: |
        if [ -f "./test-output/index.html" ] || [ -f "./test-output/statistics.json" ]; then
          echo "Output files generated successfully"
          ls -la ./test-output/
        else
          echo "No output files found"
          exit 1
        fi
        
    - name: Upload test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: accessibility-test-results
        path: test-output/

  build-docker:
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/master' || github.ref == 'refs/heads/main'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Build Docker image
      run: docker build -t the-a11y-machine:latest .
      
    - name: Test Docker image
      run: |
        docker run --rm the-a11y-machine:latest --version
        docker run --rm the-a11y-machine:latest --help