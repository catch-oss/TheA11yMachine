name: CI

on:
  push:
    branches: [ main, master, develop ]
  pull_request:
    branches: [ main, master, develop ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [20.x, 22.x, 24.x]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v5
      
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Run linter (if available)
      run: npm run lint --if-present
      
    - name: Run unit tests
      run: npm test
      
    - name: Run integration tests
      run: npm run test:integration --if-present

  security-audit:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v5
      
    - name: Use Node.js 20
      uses: actions/setup-node@v4
      with:
        node-version: 20.x
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Run security audit
      run: npm audit --audit-level=high
      
    - name: Check for vulnerabilities
      run: npm audit --audit-level=moderate

  cli-validation:
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v5
      
    - name: Use Node.js 20
      uses: actions/setup-node@v4
      with:
        node-version: 20.x
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Test CLI basic functionality
      run: |
        echo "Testing CLI help output..."
        node ./a11ym --help | head -10
        echo "CLI help test completed successfully"
        
    - name: Test CLI version
      run: |
        echo "Testing CLI version..."
        node ./a11ym --version || echo "Version command completed"
        echo "CLI version test completed"
        
    - name: Validate CLI options
      run: |
        echo "Testing CLI recognizes standards option..."
        node ./a11ym --help | grep -q "standards" && echo "✓ Standards option found" || echo "✗ Standards option not found"
        echo "Testing CLI recognizes WCAG 2.1/2.2 message..."
        node ./a11ym --help | grep -q "WCAG 2.1" && echo "✓ WCAG 2.1/2.2 support message found" || echo "✗ WCAG 2.1/2.2 message not found"

  build-docker:
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/master' || github.ref == 'refs/heads/main'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v5
      
    - name: Build Docker image
      run: docker build -t the-a11y-machine:latest .
      
    - name: Test Docker image
      run: |
        docker run --rm the-a11y-machine:latest --version
        docker run --rm the-a11y-machine:latest --help